local a,b=...local c=HeroLib;local d=b.Cast;local e,f=HeroCache,c.Utils;local g=c.Unit;local h=g.Player;local j=g.Party;local k=g.MouseOver;local l=g.Target;local m=c.Spell;local n=g.Focus;local o=g.Raid;local p=c.Item;local pairs=pairs;local q=string.gsub;local r=string.format;local s=table.insert;local UnitInParty=UnitInParty;local UnitInRaid=UnitInRaid;b.Commons={}local t={}b.Commons.Everyone=t;local u=b.GUISettings.General;local v=b.GUISettings.Utilities;local w=b.GUISettings.Abilities;b.ReturnShouldFocus=0;function t.num(x)if x then return 1 else return 0 end end;function t.bool(x)return x~=0 end;function t.TargetIsValid()return l:Exists()and h:CanAttack(l)and not l:IsDeadOrGhost()end;function t.UnitIsCycleValid(g,y,z)return not g:IsFacingBlacklisted()and not g:IsUserCycleBlacklisted()and(not y or g:FilteredTimeToDie(">",y,z))end;function t.CanDoTUnit(g,A)return g:Health()>=A or g:IsDummy()end;local B={Buff={m(191941),m(204151),m(239932)},Debuff={348074,358988,347607,351180,353929},Cast={197810,197418,198079,214003,235751,193668,227493,228852,193211,200732,241635,241636,236494,239932,254919,244899,245458,248499,258039,346985,350828,350202,350475,351066,350422,352538,350732,348071},Channel={}}local C={Buff={},Debuff={},Cast={350732,355352,353603},Channel={}}function t.ActiveMitigationNeeded()if not h:IsTanking(l)then return false end;if B.Cast[l:CastSpellID()]then return true end;for _,D in pairs(B.Buff)do if l:BuffUp(D,true)then return true end end;for _,E in pairs(B.Debuff)do local _,_,F,_,_,_,_,_,_,G,_,_,_,_,_,_=UnitDebuff("player",E)if G~=nil then if E==G then return true end end end;return false end;local function H(m,I,J,K)if K then if m:IsReady()and m:CooldownRemains(BypassRecovery)<=0 and I:Exists()and I:IsSpellInRange(m)and I:NPCID()==J and not h:IsMoving()then return true else return false end else if m:IsReady()and m:CooldownRemains(BypassRecovery)<=0 and I and I:Exists()and I:IsSpellInRange(m)and I:NPCID()==J then return true else return false end end end;do local L=204560;function t.HandleIncorporeal(m,I,Range,K)if not Range then Range=40 end;return H(m,I,L,K)end end;do local M=204773;function t.HandleAfflicted(m,I,Range,K)if not Range then Range=40 end;return H(m,I,M,K)end end;function t.BigActiveMitigationNeeded()if not h:IsTanking(l)then return false end;if C.Cast[l:CastSpellID()]then return true end;for _,D in pairs(C.Buff)do if l:BuffUp(D,true)then return true end end;for _,E in pairs(C.Debuff)do local _,_,F,_,_,_,_,_,_,G,_,_,_,_,_,_=UnitDebuff("player",i)if G~=nil then if E==G then return true end end end;return false end;do local N={Debuff={m(243961)}}function h:HealingAbsorbed()for _,E in pairs(N.Debuff)do if h:DebuffUp(E,true)then return true end end;return false end end;function t.IsSoloMode()return not h:IsInRaid()and not h:IsInParty()end;function t.CastCycle(O,P,Q,R,S,T)if Q(l)then return b.Cast(O,S,T,R)end;if b.AoEON()then local U=l:GUID()for _,V in pairs(P)do if V:GUID()~=U and not V:IsFacingBlacklisted()and not V:IsUserCycleBlacklisted()and Q(V)then b.CastLeftNameplate(V,O)break end end end end;function t.CastTargetIf(O,P,W,X,Q,R,S,T)local Y=not Q or Q and Q(l)if not b.AoEON()and Y then return b.Cast(O,S,T,R)end;if b.AoEON()then local Z,a0=nil,nil;for _,V in pairs(P)do if not V:IsFacingBlacklisted()and not V:IsUserCycleBlacklisted()and(V:AffectingCombat()or V:IsDummy())and(not a0 or f.CompareThis(W,X(V),a0))then Z,a0=V,X(V)end end;if Z then if Y and(Z:GUID()==l:GUID()or a0==X(l))then return b.Cast(O,S,T,R)elseif Q and Q(Z)or not Q then b.CastLeftNameplate(Z,O)end end end end;function t.checkUnitHeal(m,u,g,a1)if u and g:HealthPercentage()<=a1 and m:IsReady()and g:Exists()then return true end;return false end;function t.GroupBuffMissing(a2)local a3=40;if a2:Name()=="Battle Shout"then a3=100 end;local a4;if UnitInRaid("player")then a4=g.Raid elseif UnitInParty("player")then a4=g.Party else return false end;for _,a5 in pairs(a4)do local a6="party".._;if a5:Exists()and a5:IsSpellInRange(a2)and a5:BuffRemains(a2)<0 then return true end end;return false end;function t.GetCurrentEmpowerData(a7)local a8=0;local a9={}_,_,_,StartTimeMS,EndTimeMS,_,_,_,_,StageTotal=UnitChannelInfo("player")if StageTotal and StageTotal>0 then local aa=0;for i=1,StageTotal do a9[i]={Start=aa,Finish=aa+GetUnitEmpowerStageDuration("player",i-1)/1000}b.Print(" Start"..i..": "..a9[i].Start)b.Print("Finish"..i..": "..a9[i].Finish)aa=a9[i].Finish;if StartTimeMS/1000+aa<=GetTime()then a8=i end end end;if a7 then return a8 else return a9 end end;function t.PotionSelected()local ab={"Warrior","Paladin","Hunter","Rogue","Priest","DeathKnight","Shaman","Mage","Warlock","Monk","Druid","DemonHunter","Evoker"}local ac=e.Persistent.Player.Class[3]local ad=ab[ac]local ae={[250]="Blood",[251]="Frost",[252]="Unholy",[577]="Havoc",[581]="Vengeance",[102]="Balance",[103]="Feral",[104]="Guardian",[105]="Restoration",[1467]="Devastation",[1468]="Preservation",[1473]="Augmentation",[253]="BeastMastery",[254]="Marksmanship",[255]="Survival",[62]="Arcane",[63]="Fire",[64]="Frost",[268]="Brewmaster",[269]="Windwalker",[270]="Mistweaver",[65]="Holy",[66]="Protection",[70]="Retribution",[256]="Discipline",[257]="Holy",[258]="Shadow",[259]="Assassination",[260]="Outlaw",[261]="Subtlety",[262]="Elemental",[263]="Enhancement",[264]="Restoration",[265]="Affliction",[266]="Demonology",[267]="Destruction",[71]="Arms",[72]="Fury",[73]="Protection"}local af=e.Persistent.Player.Spec[1]local ag=ae[af]local ah=b.GUISettings.APL[ad][ag].PotionType.Selected;local ai={191914,191913,191912,191907,191906,191905,191383,191382,191381,191389,191388,191387}local aj={191365,191364,191363}local ak={191368,191367,191366}local al={191401,191400,191399}if ah=="Power"then for _,am in ipairs(ai)do if p(am):IsUsable()then return p(am)end end elseif ah=="Frozen Focus"then for _,am in ipairs(aj)do if p(am):IsUsable()then return p(am)end end elseif ah=="Chilled Clarity"then for _,am in ipairs(ak)do if p(am):IsUsable()then return p(am)end end elseif ah=="Shocking Disclosure"then for _,am in ipairs(al)do if p(am):IsUsable()then return p(am)end end else return nil end end;function t.getRaidMemberNum()local an=0;for i=1,40,1 do if UnitExists("raid"..i)then an=an+1 end end;return an end;function t.getCountOfMembers()if t.getRaidMemberNum==0 then return GetNumGroupMembers()end;return t.getRaidMemberNum()end;do t.DispellableEnrageBuffIDs={m(324736),m(228318),m(178658),m(333227),m(334800),m(334967),m(324737),m(326450),m(334470),m(320703),m(320012),m(324085),m(333241),m(331510),m(344739),m(368477),m(368396),m(355057),m(356133),m(342139),m(353706),m(355782),m(327155),m(158337),m(355782),m(333875),m(344739),m(228318),m(332158),m(321764),m(324914),m(326046),m(324776),m(340544),m(324736),m(328015),m(322433),m(334324),m(317936),m(327332),m(328288),m(343470),m(333293),m(320272),m(342139),m(355888),m(349933),m(356549),m(355934),m(353706),m(347775),m(357284),m(335141),m(327155),m(178658),m(333227),m(334800),m(334967),m(324737),m(326450),m(334470),m(320703),m(320012),m(324085),m(333241),m(344739),m(368477),m(368396),m(355057),m(356133),m(158337),m(164426),m(382555),m(257260),m(228318),m(390938),m(397410),m(190225),m(396018),m(265081),m(266209),m(257476),m(257739),m(257899),m(201983),m(369806),m(382555),m(385827),m(371875),m(377384),m(412695)}function t.UnitHasEnrageBuff(ao)for i=1,21 do local ap,_,_,aq=UnitBuff(ao:ID(),i)if ap~=nil and aq==""then return true end end;return false end;t.DispellableMagicBuffIDs={m(392454),m(398151),m(386223),m(265091),m(266201),m(369400),m(369823),m(378149),m(411743),m(395694),m(377402)}function t.UnitHasMagicBuff(ao)for i=1,21 do local ap,_,_,aq=UnitBuff(ao:ID(),i)if ap~=nil and aq=="Magic"then return true end end;return false end end;do t.DispellableMagicDebuffs={m(388392),m(391977),m(207278),m(207981),m(372682),m(392641),m(397878),m(114803),m(395872),m(386549),m(377488),m(386025),m(384686),m(376827),m(106113),m(209516),m(215429),m(266265),m(257908),m(256106),m(377405),m(373899),m(381379),m(410997),m(87618),m(374724),m(383935),m(385963),m(387359),m(416716),m(411994),m(415436),m(415437),m(413547),m(400681),m(401667),m(407121),m(417030),m(412027),m(412131),m(411644),m(413606),m(418200),m(401667),m(412378),m(253562),m(255371),m(255041),m(255582),m(200084),m(194960),m(225909),m(200642),m(204246),m(200182),m(201902),m(428084),m(427863),m(169840),m(164965),m(169839),m(426849),m(75992),m(429048),m(428103),m(265881),m(264378),m(264390),m(264407),m(417807),m(421326)}function t.UnitHasMagicDebuff(ao)for i=1,21 do local ap,_,_,aq=UnitDebuff(ao:ID(),i)if ap~=nil and aq=="Magic"then return true end end;return false end;t.DispellableDiseaseDebuffs={m(278961),m(258323),m(257775),m(369818),m(368081),m(385039),m(396305),m(377864),m(382808),m(250372),m(201365),m(76363),m(261440),m(264050)}function t.UnitHasDiseaseDebuff(ao)for i=1,21 do local ap,_,_,aq=UnitDebuff(ao:ID(),i)if ap~=nil and aq=="Disease"then return true end end;return false end;t.DispellablePoisonDebuffs={m(123456),m(252687),m(200684),m(198904),m(165123),m(169658),m(427460),m(76516),m(264520),m(420856),m(420857),m(420858),m(420859)}function t.UnitHasPoisonDebuff(ao)for i=1,21 do local ap,_,_,aq=UnitDebuff(ao:ID(),i)if ap~=nil and aq=="Poison"then return true end end;return false end;t.DispellableCurseDebuffs={m(397911),m(387615),m(369365),m(413618)}function t.UnitHasCurseDebuff(ao)for i=1,21 do local ap,_,_,aq=UnitDebuff(ao:ID(),i)if ap~=nil and aq=="Curse"then return true end end;return false end end;function t.UnitHasDebuffFromList(ao,ar)for i=1,#ar do if ao:DebuffUp(ar[i],true)then return true end end;return false end;function t.UnitHasDispellableDebuffByPlayer(ao)if not ao then return false end;for i=1,21 do local ap=UnitAura(ao:ID(),i,"HARMFUL|RAID")if ap~=nil then return true end end end;function t.IsSoloMode()return not h:IsInRaid()and not h:IsInParty()end;do local as={}local at={}function t.FriendlyUnits(au,av)as={}local aw=av or 40;if#as==0 then if au then else s(as,h)end;for i=1,4 do local ax=r("party%d",i)s(as,j[ax])end end;if#at==0 then for i=1,aw do local ay=r("raid%d",i)s(at,o[ay])end end;if t.IsSoloMode()then return{h}elseif h:IsInParty()and not h:IsInRaid()then return as elseif h:IsInRaid()then return at end;return{}end end;do t.DispellableDebuffs={}function t.DispellableFriendlyUnits(av,az)local aA=t.FriendlyUnits(az,av)local aB={}for i=1,#aA do local aC=aA[i]for aD=1,#t.DispellableDebuffs do if aC:DebuffUp(t.DispellableDebuffs[aD],true)then s(aB,aC)end end end;return aB end;function t.DispellableFriendlyUnit(av,az)local aE=t.DispellableFriendlyUnits(av,az)local aF=#aE;if aF>0 then for i=1,aF do local aG=aE[i]if not t.UnitGroupRole(aG)=="TANK"then return aG end end;return aE[1]end end end;function t.UnitGroupRole(aH)if aH:IsAPlayer()then return UnitGroupRolesAssigned(aH:ID())end end;do t.MindControllSpells={}function t.IsMindControlled(aI)if aI and aI:Exists()and not aI:IsDeadOrGhost()then for i=1,#t.MindControllSpells do if aI:DebuffUp(t.MindControllSpells[i],true)then return true end end end;return false end end;function t.FriendlyUnitWithHealAbsorb(Range,aJ,av,aK)if not Range then Range=40 end;local aL;local aA=t.FriendlyUnits(false,av)for i=1,#aA do local aI=aA[i]if aJ==nil or t.UnitGroupRole(aI)==aJ then if aI and aI:Exists()and(aI:IsInRange(Range)or aI:IsSpellInRange(aK))and not aI:IsDeadOrGhost()and not t.IsMindControlled(aI)then if aI:HasHealAbsorb()>100000 then aL=aI end end end end;return aL end;function t.NamedUnit(Range,aM,av,aK)if not Range then Range=40 end;local aN;local aA=t.FriendlyUnits(false,av)for i=1,#aA do local aI=aA[i]if aI and aI:Exists()and(aI:IsInRange(Range)or aI:IsSpellInRange(aK))and not aI:IsDeadOrGhost()and not t.IsMindControlled(aI)then if aI:Name()==aM then aN=aI end end end;return aN end;function t.LowestTankUnit(Range,av,aK)if not Range then Range=40 end;local aO;local aA=t.FriendlyUnits(false,av)for i=1,#aA do local aI=aA[i]if t.UnitGroupRole(aI)=="TANK"then if aI and aI:Exists()and aI:IsInRange(Range)and not aI:IsDeadOrGhost()and not t.IsMindControlled(aI)then b.Print("FU="..aI:Name())if not aO or aI:HealthPercentage()<aO:HealthPercentage()then aO=aI end end end end;return aO end;function t.LowestFriendlyUnit(Range,aJ,av,aK)if not Range then Range=40 end;local aO;local aA=t.FriendlyUnits(false,av)for i=1,#aA do local aI=aA[i]if aJ==nil or t.UnitGroupRole(aI)==aJ then if aI and aI:Exists()and(aI:IsInRange(Range)or aI:IsSpellInRange(aK))and not aI:IsDeadOrGhost()and not t.IsMindControlled(aI)then if not aO or aI:HealthPercentage()<aO:HealthPercentage()then aO=aI end end end end;return aO end;function t.LowestFriendlyUnitRefreshableBuff(D,aP,Range,aJ,au,av,aK)if not Range then Range=40 end;local aO;local aA=t.FriendlyUnits(au,av)for i=1,#aA do local aI=aA[i]if aJ==nil or t.UnitGroupRole(aI)==aJ then if aI and(aI:BuffDown(D)or aI:BuffRemains(D)<aP)and aI:Exists()and(aI:IsInRange(Range)or aI:IsSpellInRange(aK))and not aI:IsDeadOrGhost()and not t.IsMindControlled(aI)then if not aO or aI:HealthPercentage()<aO:HealthPercentage()then aO=aI end end end end;return aO end;function t.FriendlyUnitsBelowHealthPercentageCount(aQ,av,Range,aK)if not Range then Range=40 end;local aR=0;local aA=t.FriendlyUnits(false,av)for i=1,#aA do local aI=aA[i]if aI:Exists()and(aI:IsInRange(Range)or aI:IsSpellInRange(aK))and not aI:IsDeadOrGhost()then if aI:HealthPercentage()<=aQ then aR=aR+1 end end end;return aR end;function t.FriendlyNamedUnitsWithRefreshableBuff(D,aP,Range,...)local aS={...}if not Range then Range=40 end;local aA={}local i=1;for _,aT in pairs(aS)do local aU=t.NamedUnit(Range,aT)if aU and(aU:BuffDown(D)or aU:BuffRemains(D)<aP)then aA[i]=t.NamedUnit(Range,aT)i=i+1 end end;return aA end;function t.FriendlyUnitsWithBuffCount(D,aV,aW,av)local aR=0;local aA=t.FriendlyUnits(false,av)for i=1,#aA do local aI=aA[i]if aI:Exists()and not aI:IsDeadOrGhost()and(not aV or t.UnitGroupRole(aI)=="TANK")and(not aW or t.UnitGroupRole(aI)~="TANK")then if aI:BuffUp(D)and not aI:BuffRefreshable(D)then aR=aR+1 end end end;return aR end;function t.FriendlyUnitsWithDebuffFromList(aX,Range,av,aK)local aY={}if not Range then Range=40 end;local aA=t.FriendlyUnits(false,av)local aD=1;for i=1,#aA do local aI=aA[i]if aI:Exists()and(aI:IsInRange(Range)or aI:IsSpellInRange(aK))and not aI:IsDeadOrGhost()then if t.UnitHasDebuffFromList(aI,aX)then aY[aD]=aA[i]aD=aD+1 end end end;return aY end;function t.FriendlyUnitsWithBuffBelowHealthPercentageCount(D,aQ,aV,aW,av)local aR=0;local aA=t.FriendlyUnits(false,av)for i=1,#aA do local aI=aA[i]if aI:Exists()and aI:HealthPercentage()<=aQ and not aI:IsDeadOrGhost()and(not aV or t.UnitGroupRole(aI)=="TANK")and(not aW or t.UnitGroupRole(aI)~="TANK")then if aI:BuffUp(D)and not aI:BuffRefreshable(D)then aR=aR+1 end end end;return aR end;function t.FriendlyUnitsWithoutBuffCount(D,aV,aW,av)local aA=t.FriendlyUnits(false,av)local aR=#aA;for i=1,#aA do local aI=aA[i]if aI:Exists()and not aI:IsDeadOrGhost()and(not aV or t.UnitGroupRole(aI)=="TANK")and(not aW or t.UnitGroupRole(aI)~="TANK")then if aI:BuffUp(D)and not aI:BuffRefreshable(D)then aR=aR-1 end end end;return aR end;function t.FriendlyUnitsWithoutBuffBelowHealthPercentageCount(D,aQ,aV,aW,av)local aA=t.FriendlyUnits(false,av)local aR=#aA;for i=1,#aA do local aI=aA[i]if aI:Exists()and aI:HealthPercentage()<=aQ and not aI:IsDeadOrGhost()and(not aV or t.UnitGroupRole(aI)=="TANK")and(not aW or t.UnitGroupRole(aI)~="TANK")then if aI:BuffUp(D)and not aI:BuffRefreshable(D)then aR=aR-1 end end end;return aR end;function t.DeadFriendlyUnitsCount()local aR=0;local aA=t.FriendlyUnits()for i=1,#aA do local aI=aA[i]if aI:IsDeadOrGhost()then aR=aR+1 end end;return aR end;t.LastFocusSwap=0;function t.FocusSpecifiedUnit(aZ,Range,aK)if not Range then Range=40 end;if aZ~=nil and(n==nil or not n:Exists()or aZ:GUID()~=n:GUID())and aZ:IsSpellInRange(aK)then local a_="Focus"..f.UpperCaseFirst(aZ:ID())t.LastFocusSwap=GetTime()if aZ:ID()=="player"then b.ReturnShouldFocus=50;return"Changing Focus to player"elseif aZ:ID()=="Target"then b.ReturnShouldFocus=60;return"Changing Focus to target"elseif string.find(aZ:ID(),"Party")then b.ReturnShouldFocus=50+tonumber(string.sub(aZ:ID(),6))return"Changing Focus to party"..tonumber(string.sub(aZ:ID(),6))elseif string.find(aZ:ID(),"Raid")then b.ReturnShouldFocus=string.sub(aZ:ID(),5)return"Changing Focus to raid"..string.sub(aZ:ID(),5)end;return"Changing Focus"else b.ReturnShouldFocus=0;return false end end;function t.FocusUnitWithDebuffFromList(aX,Range,av,aK)if not Range then Range=40 end;local b0=nil;if t.FriendlyUnitsWithDebuffFromList(aX,Range,av,aK)then b0=t.FriendlyUnitsWithDebuffFromList(aX,Range,av,aK)[1]end;if b0~=nil and(n==nil or not n:Exists()or b0:GUID()~=n:GUID())then local a_="Focus"..f.UpperCaseFirst(b0:ID())t.LastFocusSwap=GetTime()if b0:ID()=="player"then b.ReturnShouldFocus=50;return"Changing Focus to player"elseif b0:ID()=="Target"then b.ReturnShouldFocus=60;return"Changing Focus to target"elseif string.find(b0:ID(),"Party")then b.ReturnShouldFocus=50+tonumber(string.sub(b0:ID(),6))return"Changing Focus to party"..tonumber(string.sub(b0:ID(),6))elseif string.find(b0:ID(),"Raid")then b.ReturnShouldFocus=string.sub(b0:ID(),5)return"Changing Focus to raid"..string.sub(b0:ID(),5)end;return"Changing Focus"else b.ReturnShouldFocus=0;return false end end;function t.GetFocusUnit(b1,Range,aJ,av,aK)if not Range then Range=40 end;if t.IsSoloMode()then return h end;if b1 then local aG=t.DispellableFriendlyUnit(av)if aG then return aG end end;local b2=t.LowestFriendlyUnit(Range,aJ,av,aK)if b2 then return b2 end end;t.SwapTimer=0;function t.FocusUnit(b1,Range,aJ,av,aK)local b3=850;if not Range then Range=40 end;local b0=t.GetFocusUnit(b1,Range,aJ,av,aK)if b0~=nil then if n==nil or not n:Exists()or b0:GUID()~=n:GUID()then if(GetTime()-t.SwapTimer)*1000>=b3 then t.SwapTimer=GetTime()+h:GCD()+0.25;if b0:ID()=="player"then b.ReturnShouldFocus=50;return"Changing Focus to player"elseif b0:ID()=="Target"then b.ReturnShouldFocus=60;return"Changing Focus to target"elseif string.find(b0:ID(),"Party")then b.ReturnShouldFocus=50+tonumber(string.sub(b0:ID(),6))return"Changing Focus to party"..tonumber(string.sub(b0:ID(),6))elseif string.find(b0:ID(),"Raid")then b.ReturnShouldFocus=string.sub(b0:ID(),5)return"Changing Focus to raid"..string.sub(b0:ID(),5)end;return"Changing Focus"end else b.ReturnShouldFocus=0 end else b.ReturnShouldFocus=0;return false end end;function t.GetFocusUnitRefreshableBuff(D,aP,Range,aJ,au,av,aK)if not Range then Range=40 end;if t.TargetIsValidHealableNpc()then return l end;if t.IsSoloMode()then return h end;local b2=t.LowestFriendlyUnitRefreshableBuff(D,aP,Range,aJ,au,av,aK)if b2 then return b2 end end;function t.FocusUnitRefreshableBuff(D,aP,Range,aJ,au,av,aK)local b3=800;if not Range then Range=40 end;local b0=t.GetFocusUnitRefreshableBuff(D,aP,Range,aJ,au,av,aK)if b0~=nil and(n==nil or not n:Exists()or b0:GUID()~=n:GUID())then local a_="Focus"..f.UpperCaseFirst(b0:ID())t.LastFocusSwap=GetTime()if b0:ID()=="player"then b.ReturnShouldFocus=50;return"Changing Focus to player"elseif b0:ID()=="Target"then b.ReturnShouldFocus=60;return"Changing Focus to target"elseif string.find(b0:ID(),"Party")then b.ReturnShouldFocus=50+tonumber(string.sub(b0:ID(),6))return"Changing Focus to party"..tonumber(string.sub(b0:ID(),6))elseif string.find(b0:ID(),"Raid")then b.ReturnShouldFocus=string.sub(b0:ID(),5)return"Changing Focus to raid"..string.sub(b0:ID(),5)end;return"Changing Focus"else b.ReturnShouldFocus=0;return false end end;function t.IsTankBelowHealthPercentage(a1,av,aK)local b4=t.LowestFriendlyUnit(40,"TANK",av,aK)if b4 then return b4:HealthPercentage()<a1 else return false end end;function t.getUnitsAverageHealthPercentage(b5)if t.IsSoloMode()or h:IsInParty()and not h:IsInRaid()then return t.getFriendlyUnitsAverageHealthPercentage(nil,b5)elseif h:IsInRaid()then return t.getFriendlyUnitsAverageHealthPercentage(nil,b5)end end;function g:Health()return UnitHealth(self.UnitID)or-1 end;function g:MaxHealth()return UnitHealthMax(self.UnitID)or-1 end;function t.getFriendlyUnitsAverageHealthPercentage(av,b5)if not Range then Range=40 end;local aR=0;local aA=t.FriendlyUnits(false,av)for i=1,#aA do local aI=aA[i]if aI:Exists()and not aI:IsDeadOrGhost()and aI:HealthPercentage()<=b5 then aR=aR+1 end end;return aR end;function t.AreUnitsBelowHealthPercentage(a1,b6,aK)if t.IsSoloMode()or h:IsInParty()and not h:IsInRaid()then return t.FriendlyUnitsBelowHealthPercentageCount(a1,nil,nil,aK)>=b6 elseif h:IsInRaid()then return t.FriendlyUnitsBelowHealthPercentageCount(a1,nil,nil,aK)>=b6 end end;do t.Timers={}function t.InitTimers()if IsAddOnLoaded("DBM-Core")then elseif IsAddOnLoaded("BigWigs")then local b7=function(...)local _,_,b8,_,b9,ba=...if b8==nil then if ba==134062 then b8="Break"elseif ba==132337 then b8="Pull"else return end end;for i=0,#t.Timers do if t.Timers[i]~=nil and t.Timers[i].id==b8 then t.Timers[i].time=GetTime()+b9;return end end;local bb={}bb.id=b8;bb.time=GetTime()+b9;s(t.Timers,bb)end;local bc=function(...)local _,_,b8=...for i=0,#t.Timers do if t.Timers[i]~=nil and t.Timers[i].id==b8 then t.Timers[i]=nil;return end end end;local bd=function(...)for i=0,#t.Timers do t.Timers[i]=nil end end;local be={}BigWigsLoader.RegisterMessage(be,"BigWigs_StartBar",b7)BigWigsLoader.RegisterMessage(be,"BigWigs_StopBar",bc)BigWigsLoader.RegisterMessage(be,"BigWigs_StopBars",bd)BigWigsLoader.RegisterMessage(be,"BigWigs_OnBossDisable",bd)BigWigsLoader.RegisterMessage(be,"BigWigs_OnPluginDisable",bd)end end;function t.PulseTimers()if IsAddOnLoaded("DBM-Core")then elseif IsAddOnLoaded("BigWigs")then for i=0,#t.Timers do if t.Timers[i]~=nil then if t.Timers[i].time<GetTime()then t.Timers[i]=nil end end end end end;function t.GetTimer(b8)for i=0,#t.Timers do if t.Timers[i]~=nil and t.Timers[i].id==b8 then local bf=t.Timers[i].time-GetTime()if bf<0 then return nil else return bf end end end;return nil end;function t.GetPullTimer()return t.GetTimer("Pull")end;function t.GetBreakTimer()return t.GetTimer("Break")end end